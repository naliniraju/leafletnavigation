{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div\\r\\n\\tleaflet \\r\\n\\tstyle=\\\"height: 100vh;\\\"\\r\\n    leafletDraw\\r\\n    [leafletOptions]=\\\"options\\\"\\r\\n    [leafletDrawOptions]=\\\"drawOptions\\\"\\r\\n    (leafletMapReady)=\\\"onMapReady($event)\\\">\\r\\n</div>\"","import { Component } from '@angular/core';\r\nimport { latLng, Map, tileLayer } from 'leaflet';\r\nimport * as L from 'leaflet';\r\nimport * as $ from 'jquery'\r\n// import 'leaflet/images/marker-shadow.png';\r\n// import 'leaflet/images/marker-icon.png';\r\nimport 'leaflet-draw';\r\nconst iconRetinaUrl = 'assets/leaflet/images/marker-icon-2x.png';\r\nconst iconUrl = 'assets/leaflet/images/marker-icon.png';\r\nconst shadowUrl = 'assets/leaflet/images/marker-shadow.png';\r\nconst iconDefault = L.icon({\r\n    iconRetinaUrl,\r\n    iconUrl,\r\n    shadowUrl,\r\n    iconSize: [25, 41],\r\n    iconAnchor: [12, 41],\r\n    popupAnchor: [1, -34],\r\n    tooltipAnchor: [16, -28],\r\n    shadowSize: [41, 41]\r\n  });\r\n  L.Marker.prototype.options.icon = iconDefault;\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n    map: L.Map;\r\n\r\n  \r\n options = {\r\n    layers: [\r\n      tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {\r\n        attribution: 'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community'\r\n      })\r\n    ],\r\n    zoom: 18,\r\n    center: latLng(8.524139, 76.936638)\r\n  };\r\n\r\n    // drawOptions = {\r\n    //     position: 'topleft',\r\n    //     draw: {\r\n    //         marker: {\r\n    //             icon: L.icon({\r\n    //                 iconSize: [25, 41],\r\n    //                 iconAnchor: [13, 41],\r\n    //                 iconUrl: '/assets/marker-icon.png',\r\n    //                 shadowUrl: '/assets/marker-shadow.png'\r\n    //             })\r\n    //         }\r\n    //     }\r\n    // };\r\n\r\n//get the current location \r\n  onMapReady(map: Map) {\r\n    function onLocationFound(e) {\r\n      L.marker(e.latlng,).on('dragend', (e) => {\r\n        $('#latitude').val(e.target.getLatLng().lat);\r\n        $('#longitude').val(e.target.getLatLng().lng);\r\n      }).addTo(map)\r\n        .bindPopup(\"Current Location :\" + e.latlng.lat + ',' + e.latlng.lng);\r\n      $('#latitude').val(e.latlng.lat);\r\n      $('#longitude').val(e.latlng.lng);\r\n      console.log(e.latlng.lat + ',' + e.latlng.lng);\r\n    }\r\n  \r\n    function onLocationError(e) {\r\n      console.log(e.message);\r\n    }\r\n\r\n    map.on('locationfound', onLocationFound);\r\n    map.on('locationerror', onLocationError);\r\n    map.locate({setView: true, watch: true, maxZoom: 18});\r\n    \r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { LeafletModule } from '@asymmetrik/ngx-leaflet';\r\nimport { LeafletDrawModule } from '@asymmetrik/ngx-leaflet-draw';\r\n\r\n@NgModule({\r\n    declarations: [\r\n      \tAppComponent\r\n    ],\r\n    imports: [\r\n\t\tBrowserModule,\r\n\t\tLeafletModule.forRoot(),\r\n\t\tLeafletDrawModule.forRoot()\r\n    ],\r\n    providers: [],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\r\n"],"sourceRoot":""}